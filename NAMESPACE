# Generated by roxygen2: do not edit by hand

S3method("[",MediaToolsQuantity)
S3method("[[",MediaToolsQuantity)
S3method(as_factor,MediaToolsQuantity)
S3method(c,MediaToolsQuantity)
S3method(get_qty_value,MediaToolsPressure)
S3method(get_qty_value,MediaToolsQuantity)
S3method(get_qty_value,MediaToolsSolubility)
S3method(get_qty_value,MediaToolsTemperature)
S3method(get_qty_value,numeric)
S3method(rep,MediaToolsQuantity)
export("%>%")
export(as_factor)
export(base_metric)
export(best_metric)
export(c_qty)
export(calculate_DIC)
export(calculate_bicarbonate)
export(calculate_carbonate)
export(calculate_carbonic_acid)
export(calculate_closed_system_TIC)
export(calculate_closed_system_alkalinity)
export(calculate_closed_system_pCO2)
export(calculate_ideal_gas_amount)
export(calculate_ideal_gas_molarity)
export(calculate_open_system_alkalinity)
export(calculate_open_system_pH)
export(calculate_solubility)
export(get_mediatools_constant)
export(get_mediatools_constants)
export(get_qty_text)
export(get_qty_units)
export(get_qty_units_with_label)
export(get_qty_value)
export(is_amount)
export(is_density)
export(is_mass)
export(is_molarity)
export(is_molecular_mass)
export(is_pressure)
export(is_qty)
export(is_solubility)
export(is_temperature)
export(is_volume)
export(make_qty_text_labeller)
export(qty)
export(scale_metric)
export(type_sum.MediaToolsQuantity)
importFrom(forcats,as_factor)
importFrom(magrittr,"%>%")
importFrom(methods,is)
importFrom(methods,new)
importFrom(rlang,"!!")
